spring:
  profiles:
    active: dev

  config:
    import: optional:file:.env[.properties]

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ${KAKAO_OAUTH2_CLIENT_ID}
            scope: profile_nickname # 카카오 닉네임만 가져옴
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: '${BASE_URL}/{action}/oauth2/code/{registrationId}'
          google:
            client-id: ${GOOGLE_OAUTH2_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH2_CLIENT_SECRET}
            redirect-uri: '${BASE_URL}/{action}/oauth2/code/{registrationId}'
            client-name: Google
            scope: profile
          naver:
            client-id: ${NAVER_OAUTH2_CLIENT_ID}
            client-secret: ${NAVER_OAUTH2_CLIENT_SECRET}
            scope: profile_nickname # 네이버 닉네임만 가져옴
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '${BASE_URL}/{action}/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

server:
  address: 0.0.0.0
  port: 8080
  forward-headers-strategy: native
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true



custom:
  jwt:
    secretKey: ${JWT_SECRET_KEY}
  accessToken:
    expirationSeconds: "#{60*15}"
  refreshToken:
    expirationSeconds: "#{60*60*24*30}"